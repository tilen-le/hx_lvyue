<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="generate.FcApproveDao">
  <resultMap id="BaseResultMap" type="com.hexing.system.domain.vo.FcApprove">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="type" jdbcType="SMALLINT" property="type" />
    <result column="main_id" jdbcType="INTEGER" property="mainId" />
    <result column="current_node" jdbcType="VARCHAR" property="currentNode" />
    <result column="originator" jdbcType="VARCHAR" property="originator" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="request_time" jdbcType="DATE" property="requestTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="deleted" jdbcType="CHAR" property="deleted" />
  </resultMap>
  <sql id="Base_Column_List">
    id, title, `type`, main_id, current_node, originator, `status`, request_time, create_by, 
    update_by, create_time, update_time, deleted
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from fc_approve
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from fc_approve
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hexing.system.domain.vo.FcApprove" useGeneratedKeys="true">
    insert into fc_approve (title, `type`, main_id, 
      current_node, originator, `status`, 
      request_time, create_by, update_by, 
      create_time, update_time, deleted
      )
    values (#{title,jdbcType=VARCHAR}, #{type,jdbcType=SMALLINT}, #{mainId,jdbcType=INTEGER}, 
      #{currentNode,jdbcType=VARCHAR}, #{originator,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{requestTime,jdbcType=DATE}, #{createBy,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hexing.system.domain.vo.FcApprove" useGeneratedKeys="true">
    insert into fc_approve
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        title,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="mainId != null">
        main_id,
      </if>
      <if test="currentNode != null">
        current_node,
      </if>
      <if test="originator != null">
        originator,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="requestTime != null">
        request_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=SMALLINT},
      </if>
      <if test="mainId != null">
        #{mainId,jdbcType=INTEGER},
      </if>
      <if test="currentNode != null">
        #{currentNode,jdbcType=VARCHAR},
      </if>
      <if test="originator != null">
        #{originator,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="requestTime != null">
        #{requestTime,jdbcType=DATE},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hexing.system.domain.vo.FcApprove">
    update fc_approve
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=SMALLINT},
      </if>
      <if test="mainId != null">
        main_id = #{mainId,jdbcType=INTEGER},
      </if>
      <if test="currentNode != null">
        current_node = #{currentNode,jdbcType=VARCHAR},
      </if>
      <if test="originator != null">
        originator = #{originator,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="requestTime != null">
        request_time = #{requestTime,jdbcType=DATE},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hexing.system.domain.vo.FcApprove">
    update fc_approve
    set title = #{title,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=SMALLINT},
      main_id = #{mainId,jdbcType=INTEGER},
      current_node = #{currentNode,jdbcType=VARCHAR},
      originator = #{originator,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=VARCHAR},
      request_time = #{requestTime,jdbcType=DATE},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>